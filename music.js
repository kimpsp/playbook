// === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ===
let audioContext;
let audioSource;
let gainNode;

const musicBtn = document.getElementById("music-toggle-btn");
const volumeSlider = document.getElementById("volume-slider");

let isPlaying = false;
let audioBuffer;
let currentTrackUrl = null;

console.log("musicBtn:", musicBtn);
console.log("volumeSlider:", volumeSlider);

// === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É–∑—ã–∫–æ–π
if (musicBtn && volumeSlider) {
  // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  document.addEventListener("click", loadAndPlayAudio, { once: true });
} else {
  console.warn("–ù–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É–∑—ã–∫–æ–π");
}

// === –§–£–ù–ö–¶–ò–ò ===

function loadAndPlayAudio() {
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AudioContext
    audioContext = new (window.AudioContext || window.webkitAudioContext)();
    console.log("AudioContext —Å–æ–∑–¥–∞–Ω:", audioContext);

    // –ü–æ–ª—É—á–∞–µ–º URL —Ç—Ä–µ–∫–∞ –∏–∑ <audio> –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const audioElement = document.getElementById("bg-music");
    currentTrackUrl = audioElement?.src || "sounds/menu_theme_long.mp3";

    console.log("–¢—Ä–µ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω:", currentTrackUrl);

    if (!currentTrackUrl) {
      throw new Error("–ù–µ –Ω–∞–π–¥–µ–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –∑–≤—É–∫–∞");
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª
    fetch(currentTrackUrl)
      .then(response => {
        if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞");
        return response.arrayBuffer();
      })
      .then(data => {
        return new Promise((resolve, reject) => {
          audioContext.decodeAudioData(data, resolve, reject);
        });
      })
      .then(buffer => {
        audioBuffer = buffer;

        // –°–æ–∑–¥–∞—ë–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∏ —É–∑–µ–ª –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        audioSource = audioContext.createBufferSource();
        gainNode = audioContext.createGain();

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ü–µ–ø–æ—á–∫—É –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        audioSource.buffer = audioBuffer;
        audioSource.loop = true;
        audioSource.connect(gainNode).connect(audioContext.destination);

        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º
        audioSource.start();
        isPlaying = true;
        if (musicBtn) musicBtn.textContent = "‚è∏Ô∏è";

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –≥—Ä–æ–º–∫–æ—Å—Ç—å
        const savedVolume = localStorage.getItem("musicVolume") || 0.5;
        gainNode.gain.value = parseFloat(savedVolume);
        if (volumeSlider) volumeSlider.value = savedVolume;
      })
      .catch(e => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ:", e);
      });

  } catch (e) {
    console.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è AudioContext:", e.message);
  }
}

function toggleMusic() {
  if (!audioContext) {
    console.warn("AudioContext –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω");
    alert("–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –º—É–∑—ã–∫–∞ –µ—â—ë –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...");
    return;
  }

  if (!audioBuffer) {
    console.warn("–ê—É–¥–∏–æ–±—É—Ñ–µ—Ä –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω");
    alert("–§–∞–π–ª –º—É–∑—ã–∫–∏ –µ—â—ë –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...");
    return;
  }

  if (!isPlaying) {
    // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
    audioSource = audioContext.createBufferSource();
    audioSource.buffer = audioBuffer;
    audioSource.loop = true;
    audioSource.connect(gainNode).connect(audioContext.destination);
    audioSource.start();
    isPlaying = true;
    if (musicBtn) musicBtn.textContent = "‚è∏Ô∏è";
  } else {
    // –°—Ç–∞–≤–∏–º –Ω–∞ –ø–∞—É–∑—É
    audioSource.stop();
    isPlaying = false;
    if (musicBtn) musicBtn.textContent = "üéµ";
  }
}

function setVolume(value) {
  const volumeValue = parseFloat(value);
  if (gainNode) gainNode.gain.value = volumeValue;
  localStorage.setItem("musicVolume", volumeValue); // –°–æ—Ö—Ä–∞–Ω—è–µ–º
}

// === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ===

if (musicBtn) {
  musicBtn.addEventListener("click", toggleMusic);
}

if (volumeSlider) {
  volumeSlider.addEventListener("input", () => {
    setVolume(volumeSlider.value);
  });

  volumeSlider.addEventListener("touchmove", () => {
    setVolume(volumeSlider.value);
  });
}
